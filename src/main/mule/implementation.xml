<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce-case-attachement-api="http://www.mulesoft.org/schema/mule/salesforce-case-attachement-api" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:online-ocrapi="http://www.mulesoft.org/schema/mule/online-ocrapi"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/online-ocrapi http://www.mulesoft.org/schema/mule/online-ocrapi/current/mule-online-ocrapi.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/salesforce-case-attachement-api http://www.mulesoft.org/schema/mule/salesforce-case-attachement-api/current/mule-salesforce-case-attachement-api.xsd">
	<flow name="implementationFlow" doc:id="d8a580d2-644e-477b-a5df-341c13962301" >
		<ee:transform doc:name="Transform Message" doc:id="13e3e453-fa89-4264-b8ed-bad7aa94a2ec">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="docValues"><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Transform Message" doc:id="98d69d3d-2aa8-4ca9-901a-381dbc5784c8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://validationnamespace.raml.org
import * from dw::core::Binaries
---
{
	ns0#root: {
		ns0#file1: toBase64(vars.docValues.fileContents),
		ns0#language: vars.docValues.language,
		ns0#contentType: vars.docValues.contentType,
		ns0#contentTransferEncoding: 'base64',
		ns0#filename: vars.docValues.filename
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<online-ocrapi:create-translate doc:name="Translate Document" doc:id="71d07bb1-b5b4-4bf4-abd0-da63bddf34ab" config-ref="Online_OCR_API_Config" client-id="${secure::ocr_service.client_id}" client-secret="${secure::ocr_service.client_secret}"/>
		<set-variable value="#[lower(payload.text)]" doc:name="Set Variable" doc:id="9a62c5dc-b79f-444c-aa46-469830cb2b6e" variableName="text" />
		<scripting:execute engine="groovy" doc:name="Match keywords against text" doc:id="e111d0b0-1efe-4cfd-8993-c19408e1c41b" >
			<scripting:code >${file::match.groovy}</scripting:code>
			<scripting:parameters ><![CDATA[#[{
	keywords: vars.docValues.keywords as String,
	text: vars.text
}]]]></scripting:parameters>
		</scripting:execute>
		<choice doc:name="Choice" doc:id="6bfc7436-7679-4141-8d11-8224ce631438" >
			<when expression='#[payload == "Match"]'>
				<ee:transform doc:name="Transform Message" doc:id="f2df2195-dc45-4554-ae4f-3f5b0a463b13">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output multipart/form-data
boundary="3453563653"
---
{
  parts : {
    fileName : {
      headers : {
        "Content-Type": "text/plain"
      },
      content : vars.docValues.fileName
    },
    emaillAddress : {
      headers : {
        "Content-Type": "text/plain"
      },
      content : vars.docValues.emailAddress
    },
    file : {
      headers : {
        "Content-Disposition" : {
            "filename": vars.docValuces.filename as String
        },
        "Content-Type" : vars.docValues.contentType as String
      },
      content : vars.docValues.fileContents
    }
  }
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<salesforce-case-attachement-api:create-attachment doc:name="Create attachment" doc:id="2d189da7-d473-4762-b194-9e7b756bb416" config-ref="Salesforce_Case_Attachement_API_Config" client-id="${secure::sfdc_service.client_id}" client-secret="${secure::sfdc_service.client_secret}"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="d70ba45d-dc92-4c5d-af7a-8f90c2d70478" message="#[payload]"/>
			</otherwise>
		</choice>
		<set-payload value="#[true as Boolean]" doc:name="Set Payload" doc:id="a925ec13-d0e1-4931-b935-7185b961f01a" />
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="08d93f89-6310-4ad1-9f20-2bddcadc6db7" >
				<logger level="INFO" doc:name="Logger" doc:id="03c6dff9-2ce5-47ef-be8b-2db0e453c6c6" message="Error: #[error.description], Payload: #[payload]"/>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
